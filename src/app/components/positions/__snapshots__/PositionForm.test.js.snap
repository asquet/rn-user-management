// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PositionForm renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#707070",
          "fontSize": 24,
        },
        null,
      ]
    }
  >
    Create position
  </Text>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      Name
    </Text>
    <TextInput
      onChangeText={[Function]}
      placeholder="Name"
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#C0C0C0",
          "fontSize": 18,
          "height": 40,
        }
      }
      value="pos"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      roles
    </Text>
    <RCTScrollView
      dataSource={
        ListViewDataSource {
          "items": 1,
        }
      }
      enableEmptySections={true}
      renderRow={[Function]}
      renderScrollComponent={[Function]}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "backgroundColor": "skyblue",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#707070",
                    "fontSize": 18,
                  },
                  null,
                ]
              }
            >
              1
               
               - 
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 15,
              "marginRight": 15,
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 3,
                "padding": 5,
              },
              Object {
                "backgroundColor": "#33CC55",
                "flex": 1,
              },
            ],
            undefined,
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": undefined,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Save
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 15,
              "marginRight": 15,
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 3,
                "padding": 5,
              },
              Object {
                "backgroundColor": "#dd5555",
                "flex": 1,
              },
            ],
            undefined,
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": undefined,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</View>
`;
