// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserForm renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#707070",
          "fontSize": 24,
        },
        null,
      ]
    }
  >
    Create user
  </Text>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      Name
    </Text>
    <TextInput
      onChangeText={[Function]}
      placeholder="Name"
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#C0C0C0",
          "fontSize": 18,
          "height": 40,
        }
      }
      value="user"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      Birth date
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "width": 142,
            },
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#C0C0C0",
              },
              null,
            ],
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 40,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#aaa",
                "borderWidth": 1,
                "flex": 1,
                "height": 40,
                "justifyContent": "center",
              },
              Object {
                "borderWidth": 0,
              },
              false,
              false,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#333",
                },
                Object {
                  "fontSize": 18,
                },
              ]
            }
          >
            2000-10-10
          </Text>
        </View>
        <Image
          source={1}
          style={
            Array [
              Object {
                "height": 32,
                "marginLeft": 5,
                "marginRight": 5,
                "width": 32,
              },
              Object {},
            ]
          }
        />
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "alignItems": "flex-end",
                    "backgroundColor": "#00000077",
                    "flex": 1,
                    "flexDirection": "row",
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "flex": 1,
                    },
                  ]
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "height": 0,
                      "overflow": "hidden",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderTopColor": "#ccc",
                          "borderTopWidth": 1,
                          "marginTop": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTDatePicker
                      date={971118000000}
                      maximumDate={undefined}
                      minimumDate={undefined}
                      minuteInterval={undefined}
                      mode="date"
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "height": 216,
                        }
                      }
                      timeZoneOffsetInMinutes={undefined}
                    />
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 42,
                            "justifyContent": "center",
                            "padding": 20,
                            "position": "absolute",
                            "top": 0,
                          },
                          Object {
                            "left": 0,
                          },
                          undefined,
                        ],
                      ]
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#46cf98",
                            "fontSize": 16,
                          },
                          Object {
                            "color": "#666",
                          },
                          undefined,
                        ]
                      }
                    >
                      Cancel
                    </Text>
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 42,
                            "justifyContent": "center",
                            "padding": 20,
                            "position": "absolute",
                            "top": 0,
                          },
                          Object {
                            "right": 0,
                          },
                          undefined,
                        ],
                      ]
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#46cf98",
                            "fontSize": 16,
                          },
                          undefined,
                        ]
                      }
                    >
                      Confirm
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      User Pic
    </Text>
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#707070",
                "fontSize": 18,
              },
              Object {
                "color": "#6699CC",
                "height": 40,
                "paddingTop": 5,
              },
            ]
          }
        >
          Select image
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      Manager
    </Text>
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "zIndex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderColor": "#b9b9b9",
                  "borderRadius": 1,
                  "borderWidth": 1,
                },
                undefined,
              ]
            }
          >
            <TextInput
              blurOnSubmit={true}
              data={Array []}
              defaultValue=""
              onBlur={[Function]}
              onChangeText={[Function]}
              onEndEditing={[Function]}
              onFocus={[Function]}
              placeholder="Manager not selected"
              renderItem={[Function]}
              renderSeparator={[Function]}
              renderTextInput={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "white",
                    "height": 40,
                    "paddingLeft": 3,
                  },
                  undefined,
                ]
              }
              value=""
            />
          </View>
          <View
            style={undefined}
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "height": 64,
          "marginBottom": 10,
          "padding": 3,
        },
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#707070",
            "fontSize": 18,
          },
          Object {
            "color": "#707070",
            "fontSize": 16,
            "height": 24,
            "marginBottom": 0,
          },
        ]
      }
    >
      Position
    </Text>
    <View
      style={undefined}
    >
      <RCTPicker
        items={
          Array [
            Object {
              "label": "1",
              "textColor": undefined,
              "value": 1,
            },
          ]
        }
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 15,
              "marginRight": 15,
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 3,
                "padding": 5,
              },
              Object {
                "backgroundColor": "#33CC55",
                "flex": 1,
              },
            ],
            undefined,
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": undefined,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Save
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 15,
              "marginRight": 15,
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 3,
                "padding": 5,
              },
              Object {
                "backgroundColor": "#dd5555",
                "flex": 1,
              },
            ],
            undefined,
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": undefined,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</View>
`;
